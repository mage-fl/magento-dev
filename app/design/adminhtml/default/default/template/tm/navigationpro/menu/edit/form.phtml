<div class="content-header">
    <h3 class="icon-head head-categories"><?php echo $this->htmlEscape($this->getHeader()) . ($this->getHeaderId() ? ' (' . Mage::helper('catalog')->__('ID: %s', $this->getHeaderId()) . ')' : '') ?></h3>
    <p class="content-buttons form-buttons">
        <?php if ($this->getMenu()->getId() && !$this->getMenu()->getRootMenuId()) : ?>
            <?php echo $this->getDeleteButtonHtml() ?>
        <?php endif ?>
        <?php echo $this->getAdditionalButtonsHtml(); ?>
        <?php echo $this->getSaveButtonHtml() ?>
    </p>
</div>
<?php echo $this->getTabsHtml() ?>
<iframe name="iframeSave" style="display:none; width:100%;" src="<?php echo $this->getJsUrl() ?>blank.html"></iframe>
<form target="iframeSave" id="menu_edit_form" action="<?php echo $this->getSaveUrl() ?>" method="post" enctype="multipart/form-data">
    <div class="no-display">
        <input type="hidden" name="isIframe" value="1" />
        <input name="form_key" type="hidden" value="<?php echo $this->getFormKey() ?>" />
        <input type="hidden" name="category_products" id="in_category_products" value="" />
        <input type="hidden" name="active_tab_id" id="active_tab_id" value="" />
    </div>
    <div id="menu_tab_content"></div>
</form>
<script type="text/javascript">
//<![CDATA[
    categoryForm = new varienForm('menu_edit_form');

    categoryForm.submit= function (url) {
        this.errorSections = $H({});
        this.canShowError = true;
        this.submitUrl = url;
        if (this.validator && this.validator.validate()) {
            if(this.validationUrl){
                this._validate();
            }
            else{
                if (this.isSubmitted) {
                    return false;
                }
                this.isSubmitted = true;
                this._submit();
            }
            displayLoadingMask();
            return true;
        }
        return false;
    };

    categoryForm.getCategoryId = function () {
        collection = $(this.formId).getInputs('hidden','general[id]');
        if (collection.size() > 0) {
            return collection.first().value;
        }
        return false;
    };

    categoryForm.setCategoryPath = function (path) {
        collection = $(this.formId).getInputs('hidden','general[path]');
        if (collection.size() > 0) {
            return collection.first().value = path;
        }
    };

    /**
    * Create/edit some category
    */
    function menuSubmit(url, useAjax) {
        var activeTab = $('active_tab_id');
        if (activeTab) {
            if (activeTab.tabsJsObject && activeTab.tabsJsObject.activeTab) {
                activeTab.value = activeTab.tabsJsObject.activeTab.id;
            }
        }

        var params = {};
        var fields = $('menu_edit_form').getElementsBySelector('input', 'select');
        for(var i=0;i<fields.length;i++){
            if (!fields[i].name) {
                continue;
            }
            params[fields[i].name] = fields[i].getValue();
        }

        // Get info about what we're submitting - to properly update tree nodes
        var menuId = params['general[menu_id]'] ? params['general[menu_id]'] : 0;
        var isCreating = menuId == 0; // Separate variable is needed because '0' in javascript converts to TRUE

        // Make operations with category tree
        if (isCreating) {
            if (!tree.currentNodeId) {
                tree.currentNodeId = tree.root.id;
            }
            if (params['general[menu_id]'] === undefined
                && params['general[category_id]'] === undefined) { // we need this flag only for new root menu's

                tree.addNodeTo = tree.root.id;
            }
        }

        // Submit form
        categoryForm.submit();
    };

<?php if($this->isAjax() && ($block = $this->getLayout()->getBlock('tabs')) && ($_tabsJsObject=$block->getJsObjectName())): ?>
    <?php echo $_tabsJsObject ?>.moveTabContentInDest();
    if (<?php echo $_tabsJsObject ?>.activeTab) {
        $('active_tab_id').value = <?php echo $_tabsJsObject ?>.activeTab.id;
    }
    $('active_tab_id').tabsJsObject = <?php echo $_tabsJsObject ?>;
<?php endif; ?>

function syncTabsWithRootMenu() {
    var select = $('display_in_navigation');
    if (!select || select.getValue() == 1) {
        $('menu_info_tabs_siblings') && $('menu_info_tabs_siblings').setStyle({'display': ''});
        $('menu_info_tabs_content') && $('menu_info_tabs_content').setStyle({'display': ''});
    } else {
        $('menu_info_tabs_siblings') && $('menu_info_tabs_siblings').setStyle({'display': 'none'});
        $('menu_info_tabs_content') && $('menu_info_tabs_content').setStyle({'display': 'none'});
        <?php if($this->isAjax() && ($block = $this->getLayout()->getBlock('tabs')) && ($_tabsJsObject=$block->getJsObjectName())): ?>
            if (!<?php echo $_tabsJsObject ?>.activeTab.visible()) {
                <?php echo $_tabsJsObject ?>.showTabContent($('menu_info_tabs_settings'));
            }
        <?php endif; ?>
    }
}
syncTabsWithRootMenu();
//]]>
</script>
